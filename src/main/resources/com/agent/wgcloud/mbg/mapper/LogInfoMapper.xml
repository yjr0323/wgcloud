<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.agent.wgcloud.mbg.mapper.LogInfoMapper" >
  <resultMap id="BaseResultMap" type="com.agent.wgcloud.mbg.model.LogInfo" >
    <id column="ID" property="id" jdbcType="CHAR" />
    <result column="ACCOUNT" property="account" jdbcType="CHAR" />
    <result column="HOST_NAME" property="hostName" jdbcType="CHAR" />
    <result column="INFO_CONTENT" property="infoContent" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="CHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ACCOUNT, HOST_NAME, INFO_CONTENT, STATE, CREATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.agent.wgcloud.mbg.model.LogInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from log_info
    where ID = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from log_info
    where ID = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.agent.wgcloud.mbg.model.LogInfoExample" >
    delete from log_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.agent.wgcloud.mbg.model.LogInfo" >
    <selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into log_info (ACCOUNT, HOST_NAME, INFO_CONTENT, 
      STATE, CREATE_TIME)
    values (#{account,jdbcType=CHAR}, #{hostName,jdbcType=CHAR}, #{infoContent,jdbcType=VARCHAR}, 
      #{state,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.agent.wgcloud.mbg.model.LogInfo" >
    <selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into log_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        ACCOUNT,
      </if>
      <if test="hostName != null" >
        HOST_NAME,
      </if>
      <if test="infoContent != null" >
        INFO_CONTENT,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        #{account,jdbcType=CHAR},
      </if>
      <if test="hostName != null" >
        #{hostName,jdbcType=CHAR},
      </if>
      <if test="infoContent != null" >
        #{infoContent,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.agent.wgcloud.mbg.model.LogInfoExample" resultType="java.lang.Integer" >
    select count(*) from log_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update log_info
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.account != null" >
        ACCOUNT = #{record.account,jdbcType=CHAR},
      </if>
      <if test="record.hostName != null" >
        HOST_NAME = #{record.hostName,jdbcType=CHAR},
      </if>
      <if test="record.infoContent != null" >
        INFO_CONTENT = #{record.infoContent,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update log_info
    set ID = #{record.id,jdbcType=CHAR},
      ACCOUNT = #{record.account,jdbcType=CHAR},
      HOST_NAME = #{record.hostName,jdbcType=CHAR},
      INFO_CONTENT = #{record.infoContent,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.agent.wgcloud.mbg.model.LogInfo" >
    update log_info
    <set >
      <if test="account != null" >
        ACCOUNT = #{account,jdbcType=CHAR},
      </if>
      <if test="hostName != null" >
        HOST_NAME = #{hostName,jdbcType=CHAR},
      </if>
      <if test="infoContent != null" >
        INFO_CONTENT = #{infoContent,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.agent.wgcloud.mbg.model.LogInfo" >
    update log_info
    set ACCOUNT = #{account,jdbcType=CHAR},
      HOST_NAME = #{hostName,jdbcType=CHAR},
      INFO_CONTENT = #{infoContent,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=CHAR}
  </update>
</mapper>